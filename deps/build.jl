using BinaryProvider # requires BinaryProvider 0.3.0 or later

# Parse some basic command-line arguments
const verbose = "--verbose" in ARGS
const prefix = Prefix(get([a for a in ARGS if a != "--verbose"], 1, joinpath(@__DIR__, "usr")))
products = [
    LibraryProduct(prefix, String["libarpack"], :Arpack),
]

# Download binaries from hosted location
bin_prefix = "https://github.com/JuliaLinearAlgebra/ArpackBuilder/releases/download/v0.3.5-0.2.20"

# Listing of files generated by BinaryBuilder:
download_info = Dict(
    Linux(:aarch64, :glibc) => ("$bin_prefix/ArpackBuilder.aarch64-linux-gnu.tar.gz", "fad93d668058579a786688c808f6ccbec9e0b7918278ab0c73e9abb772a5723e"),
    Linux(:armv7l, :glibc, :eabihf) => ("$bin_prefix/ArpackBuilder.arm-linux-gnueabihf.tar.gz", "a97b42e9e0fd57e814b6437a2662efeaf05b959ccbeab8b78f38f9fc481ddfb1"),
    Linux(:i686, :glibc) => ("$bin_prefix/ArpackBuilder.i686-linux-gnu.tar.gz", "4306e8a5b82697cea084deac429bc7dbfcb221d360c55339a02387448b91d601"),
    Windows(:i686) => ("$bin_prefix/ArpackBuilder.i686-w64-mingw32.tar.gz", "e285a7e1670da7319a2db89ea0ceb934c21423704bd16753b36c6345714aa956"),
    MacOS(:x86_64) => ("$bin_prefix/ArpackBuilder.x86_64-apple-darwin14.tar.gz", "3ccc0892f6c6707d629112a87fd4bce79cac8e8de52b9ae5951011734e47296f"),
    Linux(:x86_64, :glibc) => ("$bin_prefix/ArpackBuilder.x86_64-linux-gnu.tar.gz", "041180147fea0e90cedd36d977cd9723736d672332ac46879457c06a92dd6335"),
    Windows(:x86_64) => ("$bin_prefix/ArpackBuilder.x86_64-w64-mingw32.tar.gz", "25cb3d69b01e91f5b2ed85eb39e1b82ed61a4073f94021385889dc8e37bc595e"),
)

# Install unsatisfied or updated dependencies:
unsatisfied = any(!satisfied(p; verbose=verbose) for p in products)
if haskey(download_info, platform_key())
    url, tarball_hash = download_info[platform_key()]
    if unsatisfied || !isinstalled(url, tarball_hash; prefix=prefix)
        # Download and install binaries
        install(url, tarball_hash; prefix=prefix, force=true, verbose=verbose)
    end
elseif unsatisfied
    # If we don't have a BinaryProvider-compatible .tar.gz to download, complain.
    # Alternatively, you could attempt to install from a separate provider,
    # build from source or something even more ambitious here.
    error("Your platform $(triplet(platform_key())) is not supported by this package!")
end

# Write out a deps.jl file that will contain mappings for our products
write_deps_file(joinpath(@__DIR__, "deps.jl"), products)
